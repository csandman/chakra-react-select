{"version":3,"file":"select.js","names":["React","forwardRef","ReactSelect","useChakraSelectProps","Select","props","ref","chakraSelectProps","createElement","_extends"],"sources":["../../../src/select/select.tsx"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport type { MutableRefObject, ReactElement, RefAttributes } from \"react\";\nimport ReactSelect from \"react-select\";\nimport type { GroupBase, Props, SelectInstance } from \"react-select\";\nimport useChakraSelectProps from \"../use-chakra-select-props\";\n\nexport type SelectComponent = <\n  Option = unknown,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>(\n  props: Props<Option, IsMulti, Group> &\n    RefAttributes<SelectInstance<Option, IsMulti, Group>>\n) => ReactElement;\n\nconst Select = forwardRef(\n  <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(\n    props: Props<Option, IsMulti, Group>,\n    ref:\n      | ((instance: SelectInstance<Option, IsMulti, Group> | null) => void)\n      | MutableRefObject<SelectInstance<Option, IsMulti, Group> | null>\n      | null\n  ) => {\n    const chakraSelectProps = useChakraSelectProps(props);\n\n    return <ReactSelect ref={ref} {...chakraSelectProps} />;\n  }\n) as SelectComponent;\n\nexport default Select;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,OAAOC,WAAW,MAAM,cAAc;AAEtC,OAAOC,oBAAoB,MAAM,4BAA4B;AAW7D,IAAMC,MAAM,gBAAGH,UAAU,CACvB,UACEI,KAAoC,EACpCC,GAGQ,EACL;EACH,IAAMC,iBAAiB,GAAGJ,oBAAoB,CAACE,KAAK,CAAC;EAErD,oBAAOL,KAAA,CAAAQ,aAAA,CAACN,WAAW,EAAAO,QAAA;IAACH,GAAG,EAAEA;EAAI,GAAKC,iBAAiB,EAAI;AACzD,CAAC,CACiB;AAEpB,eAAeH,MAAM"}