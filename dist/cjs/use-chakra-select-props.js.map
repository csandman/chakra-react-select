{"version":3,"file":"use-chakra-select-props.js","names":["_formControl","require","_react","_chakraComponents","_interopRequireDefault","_excluded","obj","__esModule","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","useChakraSelectProps","_ref","_props$ariaInvalid","_ref$components","components","theme","size","_ref$colorScheme","colorScheme","isDisabled","isInvalid","isReadOnly","isRequired","inputId","tagVariant","_ref$selectedOptionSt","selectedOptionStyle","selectedOptionColorScheme","selectedOptionColor","variant","focusBorderColor","errorBorderColor","_ref$chakraStyles","chakraStyles","onFocus","onBlur","menuIsOpen","props","chakraTheme","useTheme","defaultVariant","Input","defaultProps","inputProps","useFormControl","id","realMenuIsOpen","readOnly","undefined","realSelectedOptionStyle","selectedOptionStyleOptions","includes","realSelectedOptionColorScheme","select","chakraComponents","disabled","_default","exports"],"sources":["../../src/use-chakra-select-props.ts"],"sourcesContent":["import { useFormControl } from \"@chakra-ui/form-control\";\nimport { useTheme } from \"@chakra-ui/react\";\nimport type { GroupBase, Props } from \"react-select\";\nimport chakraComponents from \"./chakra-components\";\nimport type { SelectedOptionStyle } from \"./types\";\n\nconst useChakraSelectProps = <\n  Option,\n  IsMulti extends boolean = false,\n  Group extends GroupBase<Option> = GroupBase<Option>\n>({\n  components = {},\n  // eslint-disable-next-line deprecation/deprecation\n  theme,\n  size,\n  colorScheme = \"gray\",\n  isDisabled,\n  isInvalid,\n  isReadOnly,\n  isRequired,\n  inputId,\n  tagVariant,\n  selectedOptionStyle = \"color\",\n  selectedOptionColorScheme,\n  // eslint-disable-next-line deprecation/deprecation\n  selectedOptionColor,\n  variant,\n  focusBorderColor,\n  errorBorderColor,\n  chakraStyles = {},\n  onFocus,\n  onBlur,\n  menuIsOpen,\n  ...props\n}: Props<Option, IsMulti, Group>): Props<Option, IsMulti, Group> => {\n  const chakraTheme = useTheme();\n  const { variant: defaultVariant } = chakraTheme.components.Input.defaultProps;\n\n  // Combine the props passed into the component with the props that can be set\n  // on a surrounding form control to get the values of `isDisabled` and\n  // `isInvalid`\n  const inputProps = useFormControl({\n    id: inputId,\n    isDisabled,\n    isInvalid,\n    isRequired,\n    isReadOnly,\n    onFocus,\n    onBlur,\n  });\n\n  // Unless `menuIsOpen` is controlled, disable it if the select is readonly\n  const realMenuIsOpen =\n    menuIsOpen ?? (inputProps.readOnly ? false : undefined);\n\n  // Ensure that the selected option style is either `color` or `check`\n  let realSelectedOptionStyle: SelectedOptionStyle = selectedOptionStyle;\n  const selectedOptionStyleOptions: SelectedOptionStyle[] = [\"color\", \"check\"];\n  if (!selectedOptionStyleOptions.includes(selectedOptionStyle)) {\n    realSelectedOptionStyle = \"color\";\n  }\n\n  // Ensure that the color used for the selected options is a string\n  let realSelectedOptionColorScheme: string =\n    selectedOptionColorScheme || selectedOptionColor || \"blue\";\n  if (typeof realSelectedOptionColorScheme !== \"string\") {\n    realSelectedOptionColorScheme = \"blue\";\n  }\n\n  const select: Props<Option, IsMulti, Group> = {\n    // Allow overriding of custom components\n    components: {\n      ...chakraComponents,\n      ...components,\n    },\n    // Custom select props\n    colorScheme,\n    size,\n    tagVariant,\n    selectedOptionStyle: realSelectedOptionStyle,\n    selectedOptionColorScheme: realSelectedOptionColorScheme,\n    variant: variant ?? defaultVariant,\n    chakraStyles,\n    focusBorderColor,\n    errorBorderColor,\n    // Extract custom props from form control\n    onFocus: inputProps.onFocus,\n    onBlur: inputProps.onBlur,\n    isDisabled: inputProps.disabled,\n    isInvalid: !!inputProps[\"aria-invalid\"],\n    inputId: inputProps.id,\n    isReadOnly: inputProps.readOnly,\n    menuIsOpen: realMenuIsOpen,\n    ...props,\n    // aria-invalid can be passed to react-select, so we allow that to\n    // override the `isInvalid` prop\n    \"aria-invalid\": props[\"aria-invalid\"] ?? inputProps[\"aria-invalid\"],\n  };\n\n  return select;\n};\n\nexport default useChakraSelectProps;\n"],"mappings":"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"}